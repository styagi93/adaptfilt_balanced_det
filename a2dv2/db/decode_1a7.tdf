--lpm_decode DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_1a7
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode322w[2..0]	: WIRE;
	w_anode335w[3..0]	: WIRE;
	w_anode352w[3..0]	: WIRE;
	w_anode362w[3..0]	: WIRE;
	w_anode372w[3..0]	: WIRE;
	w_anode382w[3..0]	: WIRE;
	w_anode392w[3..0]	: WIRE;
	w_anode402w[3..0]	: WIRE;
	w_anode412w[3..0]	: WIRE;
	w_anode424w[2..0]	: WIRE;
	w_anode433w[3..0]	: WIRE;
	w_anode444w[3..0]	: WIRE;
	w_anode454w[3..0]	: WIRE;
	w_anode464w[3..0]	: WIRE;
	w_anode474w[3..0]	: WIRE;
	w_anode484w[3..0]	: WIRE;
	w_anode494w[3..0]	: WIRE;
	w_anode504w[3..0]	: WIRE;
	w_anode515w[2..0]	: WIRE;
	w_anode524w[3..0]	: WIRE;
	w_anode535w[3..0]	: WIRE;
	w_anode545w[3..0]	: WIRE;
	w_anode555w[3..0]	: WIRE;
	w_anode565w[3..0]	: WIRE;
	w_anode575w[3..0]	: WIRE;
	w_anode585w[3..0]	: WIRE;
	w_anode595w[3..0]	: WIRE;
	w_anode606w[2..0]	: WIRE;
	w_anode615w[3..0]	: WIRE;
	w_anode626w[3..0]	: WIRE;
	w_anode636w[3..0]	: WIRE;
	w_anode646w[3..0]	: WIRE;
	w_anode656w[3..0]	: WIRE;
	w_anode666w[3..0]	: WIRE;
	w_anode676w[3..0]	: WIRE;
	w_anode686w[3..0]	: WIRE;
	w_data320w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode686w[3..3], w_anode676w[3..3], w_anode666w[3..3], w_anode656w[3..3], w_anode646w[3..3], w_anode636w[3..3], w_anode626w[3..3], w_anode615w[3..3]), ( w_anode595w[3..3], w_anode585w[3..3], w_anode575w[3..3], w_anode565w[3..3], w_anode555w[3..3], w_anode545w[3..3], w_anode535w[3..3], w_anode524w[3..3]), ( w_anode504w[3..3], w_anode494w[3..3], w_anode484w[3..3], w_anode474w[3..3], w_anode464w[3..3], w_anode454w[3..3], w_anode444w[3..3], w_anode433w[3..3]), ( w_anode412w[3..3], w_anode402w[3..3], w_anode392w[3..3], w_anode382w[3..3], w_anode372w[3..3], w_anode362w[3..3], w_anode352w[3..3], w_anode335w[3..3]));
	w_anode322w[] = ( (w_anode322w[1..1] & (! data_wire[4..4])), (w_anode322w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode335w[] = ( (w_anode335w[2..2] & (! w_data320w[2..2])), (w_anode335w[1..1] & (! w_data320w[1..1])), (w_anode335w[0..0] & (! w_data320w[0..0])), w_anode322w[2..2]);
	w_anode352w[] = ( (w_anode352w[2..2] & (! w_data320w[2..2])), (w_anode352w[1..1] & (! w_data320w[1..1])), (w_anode352w[0..0] & w_data320w[0..0]), w_anode322w[2..2]);
	w_anode362w[] = ( (w_anode362w[2..2] & (! w_data320w[2..2])), (w_anode362w[1..1] & w_data320w[1..1]), (w_anode362w[0..0] & (! w_data320w[0..0])), w_anode322w[2..2]);
	w_anode372w[] = ( (w_anode372w[2..2] & (! w_data320w[2..2])), (w_anode372w[1..1] & w_data320w[1..1]), (w_anode372w[0..0] & w_data320w[0..0]), w_anode322w[2..2]);
	w_anode382w[] = ( (w_anode382w[2..2] & w_data320w[2..2]), (w_anode382w[1..1] & (! w_data320w[1..1])), (w_anode382w[0..0] & (! w_data320w[0..0])), w_anode322w[2..2]);
	w_anode392w[] = ( (w_anode392w[2..2] & w_data320w[2..2]), (w_anode392w[1..1] & (! w_data320w[1..1])), (w_anode392w[0..0] & w_data320w[0..0]), w_anode322w[2..2]);
	w_anode402w[] = ( (w_anode402w[2..2] & w_data320w[2..2]), (w_anode402w[1..1] & w_data320w[1..1]), (w_anode402w[0..0] & (! w_data320w[0..0])), w_anode322w[2..2]);
	w_anode412w[] = ( (w_anode412w[2..2] & w_data320w[2..2]), (w_anode412w[1..1] & w_data320w[1..1]), (w_anode412w[0..0] & w_data320w[0..0]), w_anode322w[2..2]);
	w_anode424w[] = ( (w_anode424w[1..1] & (! data_wire[4..4])), (w_anode424w[0..0] & data_wire[3..3]), enable_wire);
	w_anode433w[] = ( (w_anode433w[2..2] & (! w_data320w[2..2])), (w_anode433w[1..1] & (! w_data320w[1..1])), (w_anode433w[0..0] & (! w_data320w[0..0])), w_anode424w[2..2]);
	w_anode444w[] = ( (w_anode444w[2..2] & (! w_data320w[2..2])), (w_anode444w[1..1] & (! w_data320w[1..1])), (w_anode444w[0..0] & w_data320w[0..0]), w_anode424w[2..2]);
	w_anode454w[] = ( (w_anode454w[2..2] & (! w_data320w[2..2])), (w_anode454w[1..1] & w_data320w[1..1]), (w_anode454w[0..0] & (! w_data320w[0..0])), w_anode424w[2..2]);
	w_anode464w[] = ( (w_anode464w[2..2] & (! w_data320w[2..2])), (w_anode464w[1..1] & w_data320w[1..1]), (w_anode464w[0..0] & w_data320w[0..0]), w_anode424w[2..2]);
	w_anode474w[] = ( (w_anode474w[2..2] & w_data320w[2..2]), (w_anode474w[1..1] & (! w_data320w[1..1])), (w_anode474w[0..0] & (! w_data320w[0..0])), w_anode424w[2..2]);
	w_anode484w[] = ( (w_anode484w[2..2] & w_data320w[2..2]), (w_anode484w[1..1] & (! w_data320w[1..1])), (w_anode484w[0..0] & w_data320w[0..0]), w_anode424w[2..2]);
	w_anode494w[] = ( (w_anode494w[2..2] & w_data320w[2..2]), (w_anode494w[1..1] & w_data320w[1..1]), (w_anode494w[0..0] & (! w_data320w[0..0])), w_anode424w[2..2]);
	w_anode504w[] = ( (w_anode504w[2..2] & w_data320w[2..2]), (w_anode504w[1..1] & w_data320w[1..1]), (w_anode504w[0..0] & w_data320w[0..0]), w_anode424w[2..2]);
	w_anode515w[] = ( (w_anode515w[1..1] & data_wire[4..4]), (w_anode515w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode524w[] = ( (w_anode524w[2..2] & (! w_data320w[2..2])), (w_anode524w[1..1] & (! w_data320w[1..1])), (w_anode524w[0..0] & (! w_data320w[0..0])), w_anode515w[2..2]);
	w_anode535w[] = ( (w_anode535w[2..2] & (! w_data320w[2..2])), (w_anode535w[1..1] & (! w_data320w[1..1])), (w_anode535w[0..0] & w_data320w[0..0]), w_anode515w[2..2]);
	w_anode545w[] = ( (w_anode545w[2..2] & (! w_data320w[2..2])), (w_anode545w[1..1] & w_data320w[1..1]), (w_anode545w[0..0] & (! w_data320w[0..0])), w_anode515w[2..2]);
	w_anode555w[] = ( (w_anode555w[2..2] & (! w_data320w[2..2])), (w_anode555w[1..1] & w_data320w[1..1]), (w_anode555w[0..0] & w_data320w[0..0]), w_anode515w[2..2]);
	w_anode565w[] = ( (w_anode565w[2..2] & w_data320w[2..2]), (w_anode565w[1..1] & (! w_data320w[1..1])), (w_anode565w[0..0] & (! w_data320w[0..0])), w_anode515w[2..2]);
	w_anode575w[] = ( (w_anode575w[2..2] & w_data320w[2..2]), (w_anode575w[1..1] & (! w_data320w[1..1])), (w_anode575w[0..0] & w_data320w[0..0]), w_anode515w[2..2]);
	w_anode585w[] = ( (w_anode585w[2..2] & w_data320w[2..2]), (w_anode585w[1..1] & w_data320w[1..1]), (w_anode585w[0..0] & (! w_data320w[0..0])), w_anode515w[2..2]);
	w_anode595w[] = ( (w_anode595w[2..2] & w_data320w[2..2]), (w_anode595w[1..1] & w_data320w[1..1]), (w_anode595w[0..0] & w_data320w[0..0]), w_anode515w[2..2]);
	w_anode606w[] = ( (w_anode606w[1..1] & data_wire[4..4]), (w_anode606w[0..0] & data_wire[3..3]), enable_wire);
	w_anode615w[] = ( (w_anode615w[2..2] & (! w_data320w[2..2])), (w_anode615w[1..1] & (! w_data320w[1..1])), (w_anode615w[0..0] & (! w_data320w[0..0])), w_anode606w[2..2]);
	w_anode626w[] = ( (w_anode626w[2..2] & (! w_data320w[2..2])), (w_anode626w[1..1] & (! w_data320w[1..1])), (w_anode626w[0..0] & w_data320w[0..0]), w_anode606w[2..2]);
	w_anode636w[] = ( (w_anode636w[2..2] & (! w_data320w[2..2])), (w_anode636w[1..1] & w_data320w[1..1]), (w_anode636w[0..0] & (! w_data320w[0..0])), w_anode606w[2..2]);
	w_anode646w[] = ( (w_anode646w[2..2] & (! w_data320w[2..2])), (w_anode646w[1..1] & w_data320w[1..1]), (w_anode646w[0..0] & w_data320w[0..0]), w_anode606w[2..2]);
	w_anode656w[] = ( (w_anode656w[2..2] & w_data320w[2..2]), (w_anode656w[1..1] & (! w_data320w[1..1])), (w_anode656w[0..0] & (! w_data320w[0..0])), w_anode606w[2..2]);
	w_anode666w[] = ( (w_anode666w[2..2] & w_data320w[2..2]), (w_anode666w[1..1] & (! w_data320w[1..1])), (w_anode666w[0..0] & w_data320w[0..0]), w_anode606w[2..2]);
	w_anode676w[] = ( (w_anode676w[2..2] & w_data320w[2..2]), (w_anode676w[1..1] & w_data320w[1..1]), (w_anode676w[0..0] & (! w_data320w[0..0])), w_anode606w[2..2]);
	w_anode686w[] = ( (w_anode686w[2..2] & w_data320w[2..2]), (w_anode686w[1..1] & w_data320w[1..1]), (w_anode686w[0..0] & w_data320w[0..0]), w_anode606w[2..2]);
	w_data320w[2..0] = data_wire[2..0];
END;
--VALID FILE
