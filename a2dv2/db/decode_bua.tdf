--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode11426w[1..0]	: WIRE;
	w_anode11435w[3..0]	: WIRE;
	w_anode11452w[3..0]	: WIRE;
	w_anode11462w[3..0]	: WIRE;
	w_anode11472w[3..0]	: WIRE;
	w_anode11482w[3..0]	: WIRE;
	w_anode11492w[3..0]	: WIRE;
	w_anode11502w[3..0]	: WIRE;
	w_anode11512w[3..0]	: WIRE;
	w_anode11524w[1..0]	: WIRE;
	w_anode11531w[3..0]	: WIRE;
	w_anode11542w[3..0]	: WIRE;
	w_anode11552w[3..0]	: WIRE;
	w_anode11562w[3..0]	: WIRE;
	w_anode11572w[3..0]	: WIRE;
	w_anode11582w[3..0]	: WIRE;
	w_anode11592w[3..0]	: WIRE;
	w_anode11602w[3..0]	: WIRE;
	w_data11424w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode11602w[3..3], w_anode11592w[3..3], w_anode11582w[3..3], w_anode11572w[3..3], w_anode11562w[3..3], w_anode11552w[3..3], w_anode11542w[3..3], w_anode11531w[3..3]), ( w_anode11512w[3..3], w_anode11502w[3..3], w_anode11492w[3..3], w_anode11482w[3..3], w_anode11472w[3..3], w_anode11462w[3..3], w_anode11452w[3..3], w_anode11435w[3..3]));
	w_anode11426w[] = ( (w_anode11426w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode11435w[] = ( (w_anode11435w[2..2] & (! w_data11424w[2..2])), (w_anode11435w[1..1] & (! w_data11424w[1..1])), (w_anode11435w[0..0] & (! w_data11424w[0..0])), w_anode11426w[1..1]);
	w_anode11452w[] = ( (w_anode11452w[2..2] & (! w_data11424w[2..2])), (w_anode11452w[1..1] & (! w_data11424w[1..1])), (w_anode11452w[0..0] & w_data11424w[0..0]), w_anode11426w[1..1]);
	w_anode11462w[] = ( (w_anode11462w[2..2] & (! w_data11424w[2..2])), (w_anode11462w[1..1] & w_data11424w[1..1]), (w_anode11462w[0..0] & (! w_data11424w[0..0])), w_anode11426w[1..1]);
	w_anode11472w[] = ( (w_anode11472w[2..2] & (! w_data11424w[2..2])), (w_anode11472w[1..1] & w_data11424w[1..1]), (w_anode11472w[0..0] & w_data11424w[0..0]), w_anode11426w[1..1]);
	w_anode11482w[] = ( (w_anode11482w[2..2] & w_data11424w[2..2]), (w_anode11482w[1..1] & (! w_data11424w[1..1])), (w_anode11482w[0..0] & (! w_data11424w[0..0])), w_anode11426w[1..1]);
	w_anode11492w[] = ( (w_anode11492w[2..2] & w_data11424w[2..2]), (w_anode11492w[1..1] & (! w_data11424w[1..1])), (w_anode11492w[0..0] & w_data11424w[0..0]), w_anode11426w[1..1]);
	w_anode11502w[] = ( (w_anode11502w[2..2] & w_data11424w[2..2]), (w_anode11502w[1..1] & w_data11424w[1..1]), (w_anode11502w[0..0] & (! w_data11424w[0..0])), w_anode11426w[1..1]);
	w_anode11512w[] = ( (w_anode11512w[2..2] & w_data11424w[2..2]), (w_anode11512w[1..1] & w_data11424w[1..1]), (w_anode11512w[0..0] & w_data11424w[0..0]), w_anode11426w[1..1]);
	w_anode11524w[] = ( (w_anode11524w[0..0] & data_wire[3..3]), enable_wire);
	w_anode11531w[] = ( (w_anode11531w[2..2] & (! w_data11424w[2..2])), (w_anode11531w[1..1] & (! w_data11424w[1..1])), (w_anode11531w[0..0] & (! w_data11424w[0..0])), w_anode11524w[1..1]);
	w_anode11542w[] = ( (w_anode11542w[2..2] & (! w_data11424w[2..2])), (w_anode11542w[1..1] & (! w_data11424w[1..1])), (w_anode11542w[0..0] & w_data11424w[0..0]), w_anode11524w[1..1]);
	w_anode11552w[] = ( (w_anode11552w[2..2] & (! w_data11424w[2..2])), (w_anode11552w[1..1] & w_data11424w[1..1]), (w_anode11552w[0..0] & (! w_data11424w[0..0])), w_anode11524w[1..1]);
	w_anode11562w[] = ( (w_anode11562w[2..2] & (! w_data11424w[2..2])), (w_anode11562w[1..1] & w_data11424w[1..1]), (w_anode11562w[0..0] & w_data11424w[0..0]), w_anode11524w[1..1]);
	w_anode11572w[] = ( (w_anode11572w[2..2] & w_data11424w[2..2]), (w_anode11572w[1..1] & (! w_data11424w[1..1])), (w_anode11572w[0..0] & (! w_data11424w[0..0])), w_anode11524w[1..1]);
	w_anode11582w[] = ( (w_anode11582w[2..2] & w_data11424w[2..2]), (w_anode11582w[1..1] & (! w_data11424w[1..1])), (w_anode11582w[0..0] & w_data11424w[0..0]), w_anode11524w[1..1]);
	w_anode11592w[] = ( (w_anode11592w[2..2] & w_data11424w[2..2]), (w_anode11592w[1..1] & w_data11424w[1..1]), (w_anode11592w[0..0] & (! w_data11424w[0..0])), w_anode11524w[1..1]);
	w_anode11602w[] = ( (w_anode11602w[2..2] & w_data11424w[2..2]), (w_anode11602w[1..1] & w_data11424w[1..1]), (w_anode11602w[0..0] & w_data11424w[0..0]), w_anode11524w[1..1]);
	w_data11424w[2..0] = data_wire[2..0];
END;
--VALID FILE
