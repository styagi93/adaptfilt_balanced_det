module custom_fir 
#( parameter 	W1 = 12,
					W2 = 33,
					L=16)
(input clk,
input reset,
input signed [W1-1:0] x_in,
input signed [W1-1:0] d_in,
output signed [W2-1:0] y_out,
output signed [W2-1:0] e_out);

//regs and wire declarations:
reg signed [W1-1:0] x [0:L-1];
reg signed [15:0] f [0:L-1];
reg signed [W1-1:0] d ;
wire signed [W1-1:0] emu;
reg signed [W2-1:0] xemu [0:L-1];
wire signed [W2-1:0] y,e;



always @(posedge clk)
begin 
if (reset) begin
	d<=0;
	x[0] <=0;
	x[1] <=0;
	x[2] <=0;
	x[3] <=0;
	x[4] <=0;
	x[5] <=0;
	x[6] <=0;
	x[7] <=0;
	x[8] <=0;
	x[9] <=0;
	x[10] <=0;
	x[11] <=0;
	x[12] <=0;
	x[13] <=0;
	x[14] <=0;
	x[15] <=0;

	f[0] <=0;
	f[1] <=0;
	f[2] <=0;
	f[3] <=0;
	f[4] <=0;
	f[5] <=0;
	f[6] <=0;
	f[7] <=0;
	f[8] <=0;
	f[9] <=0;
	f[10] <=0;
	f[11] <=0;
	f[12] <=0;
	f[13] <=0;
	f[14] <=0;
	f[15] <=0;

end else begin
	d <= d_in;
	x[0] <= x_in;
	x[1] <= x[0];
	x[2] <= x[1];
	x[3] <= x[2];
	x[4] <= x[3];
	x[5] <= x[4];
	x[6] <= x[5];
	x[7] <= x[6];
	x[8] <= x[7];
	x[9] <= x[8];
	x[10] <= x[9];
	x[11] <= x[10];
	x[12] <= x[11];
	x[13] <= x[12];
	x[14] <= x[13];
	x[15] <= x[14];
	
	end
end



endmodule
